# Linux 文件与目录管理

### 目录与路径
#### 目录的相关操作
> 一些特殊的目录：
* .  此层目录
* ..  上一层目录
* -  前一个工作目录
* ~  目前用户身份所在的主文件夹
* ~account  （account 代表账号名称）该帐号所在主目录

> 注意： 用 `ls -al` 查询，会发现根目录下有 `.` , `..` 目录，其实指的是根目录本身

##### 常见处理目录命令
* cd   change directory 进入...
* pwd  print working directory 显示当前目录路径
* mkdir  make a dir 创建新目录
* rmdir  remove dir 删除空目录. 如果删除非空目录 `rm -r`

#### 关于执行文件路径的变量: $PATH
> 之前用过的 `ls` 其实也是一个文件，所在目录为 `/bin/ls`,
但是为什么在每个目录下都能用这条命令呢？ --- `$PATH`

> 执行以下命令
```
echo $PATH
```
输出： 
>/Users/lovae/Library/Android/sdk/platform-tools:/Users/lovae/Library/Android/sdk/tools:
>/Users/lovae/flutter/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/go/bin:/usr/local/go/bin

会看到本机环境变量, `/bin` 目录在每个地方都有，所以都能访问到 `ls`

>`$` 表示后面加一个变量

### 文件与目录管理
#### 查看文件与目录： ls
参数：
* `-a`  全部文件，连同隐藏文件
* `-A`  全部文件，除了 `.`  `..`
* `-d`  列出目录本身(???)
* `-f`  直接列出结果，不排序（ls 默认按文件名排序）
* `F`   给出附加数据结构：`*:` => 可执行文件； `/` => 目录；`=` =>socket文件；`|` => FIFO文件
* `-h`  将文件容量表示成 B、 KB、 GB 的形式
* `-i`
* `-l`  列出长数据串，包含文件属性与权限
* `-n`  列出 UID 与 GID
* `-R`  连同子内容一起列出
* `-S`  大小排序
* `-t`  时间排序
* `--full-time`  完整时间格式

#### 复制、删除、移动
##### cp 复制
```
cp source destination
cp [options] source1 source2 ... directory
``` 
参数：
* `-a`  pdr,所有数据特性完全一样
* `-d`  若源文件为 link 文件，则复制文件属性而不是文件本身
* `-f`  force，若文件已存在且无法打开，则删除后再尝试一次
* `-i`  若文件已存在，则覆盖前先询问
* `-l`  
* `-p`  [property]连同文件属性一起复制
* `-r`  递归复制，连同子目录
* `-s`  symbol 复制成符号连接文件
* `-u`  destination 比 source 旧才更新

##### rm 删除
参数：
* `-f`  force,忽略不存在的文件
* `-i`  互动模式，删除前询问
* `-r`  递归删除

```
rm  -i bashrc*
// 删除bashrc开头的所有文件

rmdir 删除目录
```
##### mv 移动/重命名
```
mv source destination
mv [options] source1 source2 ... directory
```

参数：
* `-f`  force 
* `-i`  若目标已存在，询问是否覆盖
* `-u`  当source 比 destination 新才覆盖

##### 取得路径的文件名与目录名称
```
basename path  //取得最后的文件名
dirname path   //取得文件名前的目录名
```
